{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { isLength, isMatch } from '../../utils/validation/Validation';\nimport { showSuccessMsg, showErrMsg } from '../../utils/notification/Notification';\nimport { fetchAllUsers, dispatchGetAllUsers } from '../../../redux/actions/usersAction';\nimport './profile.css';\nconst initialState = {\n  name: '',\n  password: '',\n  cf_password: '',\n  err: '',\n  success: ''\n};\n\nfunction Profile() {\n  const auth = useSelector(state => state.auth);\n  const token = useSelector(state => state.token);\n  const users = useSelector(state => state.users);\n  const {\n    user,\n    isAdmin\n  } = auth;\n  const [data, setData] = useState(initialState);\n  const {\n    name,\n    password,\n    cf_password,\n    err,\n    success\n  } = data;\n  const [avatar, setAvatar] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [callback, setCallback] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isAdmin) {\n      fetchAllUsers(token).then(res => {\n        dispatch(dispatchGetAllUsers(res));\n      });\n    }\n  }, [token, isAdmin, dispatch, callback]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData({ ...data,\n      [name]: value,\n      err: '',\n      success: ''\n    });\n  };\n\n  const changeAvatar = async e => {\n    e.preventDefault();\n\n    try {\n      const file = e.target.files[0];\n      if (!file) return setData({ ...data,\n        err: \"No files were uploaded.\",\n        success: ''\n      });\n      if (file.size > 1024 * 1024) return setData({ ...data,\n        err: \"Size too large.\",\n        success: ''\n      });\n      if (file.type !== 'image/jpeg' && file.type !== 'image/png') return setData({ ...data,\n        err: \"File format is incorrect.\",\n        success: ''\n      });\n      let formData = new FormData();\n      formData.append('file', file);\n      setLoading(true);\n      const res = await axios.post('/api/upload_avatar', formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setAvatar(res.data.url);\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const updateInfor = () => {\n    try {\n      axios.patch('/user/update', {\n        name: name ? name : user.name,\n        avatar: avatar ? avatar : user.avatar\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setData({ ...data,\n        err: '',\n        success: \"Updated Success!\"\n      });\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const updatePassword = () => {\n    if (isLength(password)) return setData({ ...data,\n      err: \"Password must be at least 6 characters.\",\n      success: ''\n    });\n    if (!isMatch(password, cf_password)) return setData({ ...data,\n      err: \"Password did not match.\",\n      success: ''\n    });\n\n    try {\n      axios.post('/user/reset', {\n        password\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setData({ ...data,\n        err: '',\n        success: \"Updated Success!\"\n      });\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const handleUpdate = () => {\n    if (name || avatar) updateInfor();\n    if (password) updatePassword();\n  };\n\n  const handleDelete = async id => {\n    try {\n      if (user._id !== id) {\n        if (window.confirm(\"Are you sure you want to delete this account?\")) {\n          setLoading(true);\n          await axios.delete(`/user/delete/${id}`, {\n            headers: {\n              Authorization: token\n            }\n          });\n          setLoading(false);\n          setCallback(!callback);\n        }\n      }\n    } catch (err) {\n      setData({ ...data,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Mohamed-Habib/Desktop/mern-full-auth-master/client/src/components/body/profile/Profile.js"],"names":["React","useState","useEffect","axios","useSelector","useDispatch","Link","isLength","isMatch","showSuccessMsg","showErrMsg","fetchAllUsers","dispatchGetAllUsers","initialState","name","password","cf_password","err","success","Profile","auth","state","token","users","user","isAdmin","data","setData","avatar","setAvatar","loading","setLoading","callback","setCallback","dispatch","then","res","handleChange","e","value","target","changeAvatar","preventDefault","file","files","size","type","formData","FormData","append","post","headers","Authorization","url","response","msg","updateInfor","patch","updatePassword","handleUpdate","handleDelete","id","_id","window","confirm","delete"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {isLength, isMatch} from '../../utils/validation/Validation'\nimport {showSuccessMsg, showErrMsg} from '../../utils/notification/Notification'\nimport {fetchAllUsers, dispatchGetAllUsers} from '../../../redux/actions/usersAction'\nimport './profile.css'\nconst initialState = {\n    name: '',\n    password: '',\n    cf_password: '',\n    err: '',\n    success: ''\n}\n\nfunction Profile() {\n    const auth = useSelector(state => state.auth)\n    const token = useSelector(state => state.token)\n\n    const users = useSelector(state => state.users)\n\n    const {user, isAdmin} = auth\n    const [data, setData] = useState(initialState)\n    const {name, password, cf_password, err, success} = data\n\n    const [avatar, setAvatar] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [callback, setCallback] = useState(false)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(isAdmin){\n            fetchAllUsers(token).then(res =>{\n                dispatch(dispatchGetAllUsers(res))\n            })\n        }\n    },[token, isAdmin, dispatch, callback])\n\n    const handleChange = e => {\n        const {name, value} = e.target\n        setData({...data, [name]:value, err:'', success: ''})\n    }\n\n    const changeAvatar = async(e) => {\n        e.preventDefault()\n        try {\n            const file = e.target.files[0]\n\n            if(!file) return setData({...data, err: \"No files were uploaded.\" , success: ''})\n\n            if(file.size > 1024 * 1024)\n                return setData({...data, err: \"Size too large.\" , success: ''})\n\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png')\n                return setData({...data, err: \"File format is incorrect.\" , success: ''})\n\n            let formData =  new FormData()\n            formData.append('file', file)\n\n            setLoading(true)\n            const res = await axios.post('/api/upload_avatar', formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n\n            setLoading(false)\n            setAvatar(res.data.url)\n            \n        } catch (err) {\n            setData({...data, err: err.response.data.msg , success: ''})\n        }\n    }\n\n    const updateInfor = () => {\n        try {\n            axios.patch('/user/update', {\n                name: name ? name : user.name,\n                avatar: avatar ? avatar : user.avatar\n            },{\n                headers: {Authorization: token}\n            })\n\n            setData({...data, err: '' , success: \"Updated Success!\"})\n        } catch (err) {\n            setData({...data, err: err.response.data.msg , success: ''})\n        }\n    }\n\n    const updatePassword = () => {\n        if(isLength(password))\n            return setData({...data, err: \"Password must be at least 6 characters.\", success: ''})\n\n        if(!isMatch(password, cf_password))\n            return setData({...data, err: \"Password did not match.\", success: ''})\n\n        try {\n            axios.post('/user/reset', {password},{\n                headers: {Authorization: token}\n            })\n\n            setData({...data, err: '' , success: \"Updated Success!\"})\n        } catch (err) {\n            setData({...data, err: err.response.data.msg , success: ''})\n        }\n    }\n\n    const handleUpdate = () => {\n        if(name || avatar) updateInfor()\n        if(password) updatePassword()\n    }\n\n    const handleDelete = async (id) => {\n        try {\n            if(user._id !== id){\n                if(window.confirm(\"Are you sure you want to delete this account?\")){\n                    setLoading(true)\n                    await axios.delete(`/user/delete/${id}`, {\n                        headers: {Authorization: token}\n                    })\n                    setLoading(false)\n                    setCallback(!callback)\n                }\n            }\n            \n        } catch (err) {\n            setData({...data, err: err.response.data.msg , success: ''})\n        }\n    }\n\n    return (\n  \n        <>\n       \n        </>\n    \n    )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}